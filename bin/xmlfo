#!/usr/bin/env ruby

require 'rubygems'
require 'optparse'
require 'pretty-xml'

include PrettyXML


# default options
options = {:all => false, :postfix => "fo"}


# options parser
opts = OptionParser.new do |opts|
  opts.banner = "Usage: " + File.basename($0) + " [-a] [-p postfix] <filename>"
  opts.separator ""
  
  opts.on("-a", "--all", "Format all xml files in the current directory") do
    options[:all] = true
  end
  
  opts.on("-p [postfix]", "--postfix [postfix]", String, "Append a postfix to the output filename", "Default: #{options[:postfix]}") do |postfix|
    if postfix.nil? then
      opts.parse(["-h"])
      exit 1
    end
    options[:postfix] = postfix
  end
end
opts.parse!


# get filename from commandline
if (ARGV.length == 1 && options[:all] == true) || (ARGV.length == 0 && options[:all] == false) || ARGV.length > 1
  opts.parse(["-h"]) 
  exit 1 
end
filename = ARGV[0]


# read xml file, format it and write to postfixed file
def format!(file, options)
  xml = File.read(file)
  File.open(file.gsub(/^(.+)(\.xml)$/,'\1_'+options[:postfix]+'\2'), 'w') do |f|
    f.write PrettyXML::write xml
  end
end


if(options[:all]) then

  # loop through all xml files within the current directory and format. Exclude already formatted xml-files
  Dir["*.xml"].each do |file|
    break if file.match('_'+options[:postfix]+'\.xml$')
    format!(file, options)
  end
else
  
  # format the given xml-file only
  format!(filename, options)
end





